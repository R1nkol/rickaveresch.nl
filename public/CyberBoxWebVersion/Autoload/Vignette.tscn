[gd_scene load_steps=4 format=2]

[ext_resource path="res://Textures/vignette.png" type="Texture" id=1]

[sub_resource type="Shader" id=8]
code = "shader_type canvas_item;
uniform sampler2D vignette;
const vec3 noise_magic = vec3(0.06711056, 0.00583715, 52.9829189);
uniform float debanding_dither;
uniform float blur = 0.5;
uniform float vignette_darkness = -0.05;

void fragment() {
	vec3 vignette_color = texture(vignette, UV).rgb;
	
	COLOR.rgb = textureLod(SCREEN_TEXTURE, SCREEN_UV, (blur - vignette_color.r) * 4.0).rgb;
	COLOR.rgb *= texture(vignette, UV).rgb;
	COLOR.rgb += vignette_darkness;
	
	float offset =  fract(noise_magic.z * fract(dot(FRAGCOORD.xy, noise_magic.xy)));
	COLOR.rgb += vec3(offset, 1.0 - offset, offset) * debanding_dither;
}"

[sub_resource type="ShaderMaterial" id=7]
shader = SubResource( 8 )
shader_param/debanding_dither = null
shader_param/blur = 0.5
shader_param/vignette_darkness = -0.05
shader_param/vignette = ExtResource( 1 )

[node name="CanvasLayer" type="CanvasLayer"]

[node name="IntroColorRect" type="ColorRect" parent="."]
modulate = Color( 0, 0, 0, 1 )
anchor_right = 1.0
anchor_bottom = 1.0

[node name="ColorRect" type="ColorRect" parent="."]
modulate = Color( 1, 1, 1, 0.313726 )
material = SubResource( 7 )
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
